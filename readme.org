#+title: Keionsoft App Template

This is the ever-evolving app template for Keionsoft Consulting's app development efforts. Heavily in alpha, so expect constant updates and breaking changes--however, this template merges a couple important things that would be a real pain to reinstall.

* Justification
Literally why would anybody do something so complicated?
+ React Native lets me write code for iOS, Android, and a scuffed web deployment at the same time
+ ClojureScript is more powerful, more terse, and less syntactically stupid than JS
+ Krell is an easy dependency to have, and interactive REPL-based programming is literally the best thing ever
+ Storybook helps with keeping business logic out of views, and lets us test our UIs with dummy data before they ever reach the target device

Also, this is (purportedly) the stack that David Nolen and the Vouch team are using, and they are much smarter than I am, so...

* Prerequisites
You will need:
+ A computer running macOS
+ NodeJS (only tested with v16)
+ ~yarn~ package manager
+ Clojure (latest version)
+ ClojureScript (I do not remember how to get this)
+ XCode and an iOS Simulator installation
+ Probably some other things that I don't recall

Optionally, I recommend using Doom Emacs, as that is the editor I use, and I will only test it with that.

* Installation
Yes, this is a nightmare. Maybe someday I will write a script that does all of this automatically, but honestly Node projects are such a black box that you'll probably have to nuke your generated directories and run these same commands in some arbitrary fashion at least 2-4 times. YMMV.

First, clone this repository, via SSH (not HTTPS, you cowards), then run the following commands to completion:
#+begin_src bash
# Fetch all the node dependencies
yarn install

# Fetch all the CLJS dependencies for Krell
clj -M -m cljs.main -co "{:deps-cmd \"yarn\"}" --install-deps

# Go into the ios/ directory and install the pods
cd ios
pod install
cd ..

# Then, build the project.
clj -M -m krell.main -v -co build.edn -c
#+end_src

In that same directory, open up three terminals (or two terminals + Emacs w/ CIDER). In the first terminal, run the following command:

#+begin_src bash
npx react-native start
#+end_src

In the second terminal, run the following command:
#+begin_src bash
npx react-native run-ios
#+end_src

(If you get the warning "Already Booted", just disregard. I don't know what it is or does.)

Then, in your last terminal, run the following command:
#+begin_src bash
clj -M -m krell.main -co build.edn -c -r
#+end_src

This should open up a CLJS REPL that is connected to your running iPhone simulator instance. To confirm it's working, wait until you see the prompt ~cljs.user=>~ show up, then type the following in (note the pre-empting prompt which you do not type):

#+begin_src clojure
cljs.user=> (js/alert "hello whirled!")
#+end_src

If all goes well, you should see an alert pop up on the iPhone simulator matching your inputted text. Feel free to kill everything, then run a lil' ~yarn storybook~ in that directory as well, just to confirm that you have Storybook available as well.

* Usage
To be totally honest, I'm not 100% sure this thing even works, but this is where we're at. I haven't tested the ~js/require~ functionality at all, and I have no clue how nicely the JS components and CLJS are going to play in the long run. But hey, we got this far, right?
